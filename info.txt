Forslåede ændringer:

1)
I interpreter.js
Search and replace "prog[i][1]" med "prog[i][2]"
da offset er klemt ind før arg value

2)
Tilføj på stack
  this.peekTop = function() {
    return array[sp];
  }
da den skal bruges til jumps.

3)
      case 110: //JUMP_FORWARD
          // current_offset + jump + bytecode + argument
          var targetOffset = prog[i][1] + prog[i][2] + 2 + 1;
          var j = parseInt(i) + 1;
          while(prog[j][1] != targetOffset) {
            j = j + 1;
          }
          i = j;
          break;
      case 111: //JUMP_IF_FALSE 
          //---NB:Assumes forward jumps, is this wrong???---
          //If TOS is false, increment the byte code counter by delta.
          //TOS is not changed.
          if(!stack.peekTop()) {
            // current_offset + jump + bytecode + argument
            var targetOffset = prog[i][1] + prog[i][2] + 2 + 1;
            var j = parseInt(i) + 1;
            while(prog[j][1] != targetOffset) {
              j = j + 1;
            }
            i = j;
          }
          break;
      case 112: //JUMP_IF_TRUE 
          // ---NB:Assumes forward jumps, is this wrong???---
          //If TOS is true, increment the byte code counter by delta.
          //TOS is left on the stack
          if(stack.peekTop()) {
            // current_offset + jump + bytecode + argument
            var targetOffset = prog[i][1] + prog[i][2] + 2 + 1;
            var j = parseInt(i) + 1;
            while(prog[j][1] != targetOffset) {
              j = j + 1;
            }
            i = j;
          }
          break;
      case 113: //JUMP_ABSOLUTE
          //Perhaps a bit naive
          var j = 1;
          while(prog[j][1] != targetOffset) {
            j = j + 1;
          }
          i = j;
          break;